def checkio(dig1):
    dig = str(dig1)
    res = ""
    ones = {
        '0':'',
        '1':'I',
        '2':'II',
        '3':'III',
        '4':'IV',
        '5':'V',
        '6':'VI',
        '7':'VII',
        '8':'VIII',
        '9':'IX'}
    tens = {
        '0':'',
        '1':'X',
        '2':'XX',
        '3':'XXX',
        '4':'XL',
        '5':'L',
        '6':'LX',
        '7':'LXX',
        '8':'LXXX',
        '9':'XC'
        }
    hund = {
        '0':'',
        '1':'C',
        '2':'CC',
        '3':'CCC',
        '4':'CD',
        '5':'D',
        '6':'DC',
        '7':'DCC',
        '8':'DCCC',
        '9':'CM'
        }
    thou = {
        '1':'M',
        '2':'MM',
        '3':'MMM'
        }
    if len(dig) == 1:
        res = ones[dig]
    elif len(dig) == 2:
        res = tens[dig[0]]+ones[dig[1]]
    elif len(dig) == 3:
        res = hund[dig[0]]+tens[dig[1]]+ones[dig[2]]
    elif len(dig) == 4:
        res = thou[dig[0]]+hund[dig[1]]+tens[dig[2]]+ones[dig[3]]
    return res


====================
elements = { 1000 : 'M', 900 : 'CM', 500 : 'D', 400 : 'CD', 
             100 : 'C', 90 : 'XC', 50 : 'L', 40: 'XL', 
             10 : 'X', 9 : 'IX', 5 : 'V', 4: 'IV', 1 : 'I' }
              
def checkio(data):
    roman = ''
    for n in sorted(elements.keys(), reverse=True):
        while data >= n:
            roman += elements[n]
            data -= n
 
    return roman
print sorted(elements.keys(), reverse=True)
print checkio(57)
